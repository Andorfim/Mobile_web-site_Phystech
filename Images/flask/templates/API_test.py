# -*- coding: utf-8 -*-
"""api.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/1Em_Wfv33C4EaHw2RrBwynwLNYHSXcD-M
"""

import requests
from urllib.request import urlopen
from lxml import html


# пишешь по аналогии как я потому что так удобно ориентироваться
# все пометки, которые я делал например сдлеать словарь и тп ничего не делай


# это функция кода, т.е. выводит код lxml/html страницы

def kod(link):
    url = link
    headers = {'Content-Type': 'text/html'}
    response = requests.get(url, headers=headers)
    tree = html.fromstring(response.content)
    return tree


tree = kod("https://physics.itmo.ru/ru")

# Parsing the page
# (We need to use page.content rather than
# page.text because html.fromstring implicitly
# expects bytes as input.)


####### Главная страница #######

# Get element using XPath

# Новости

opisanie_news = tree.xpath('//div[@class="node--title"]/text()')
photo_news = tree.xpath('//img[@class="img-responsive"]/@src')
# //img[@class='photo-large']/@src

# print(opisanie_news)
# print(photo_news)


# надо писать окончательный путь
# Семинары
# class="img-responsive"
tree = kod("https://physics.itmo.ru/ru/seminars")

semianrs_photo = tree.xpath('//img[@class="img-responsive"]/@src')
semianars_topic1 = tree.xpath('//div[@class="seminar-type-value"]/text()')
seminars_names_speakers = tree.xpath('//div[@class="external-speaker-wrapper"]/text()')
semianars_topic2 = tree.xpath('//div[@class="speaker-talk-name"]/text()')
semianars_time_date = tree.xpath('//div[@class="dte"]/text()')
semianars_time_time = tree.xpath('//div[@class="tme"]/text()')
seminars_href = tree.xpath('//div[@class="views-row"]/a/@href')
# print(seminars_href)
# print(semianrs_photo)
# <div class="views-row"><a href="/en/seminar/microwave-seminar-16052022-dmitry-zhirihin">
# сделать функцию tree.path...


###### Сотрудники ######

tree = kod("https://physics.itmo.ru/ru/people")
sotrudniki_photo = tree.xpath('//img[@class="img-responsive"]/@src')
sotrudniki_name1 = tree.xpath(
    '//div[@class="field field--name-name field--type-string field--label-hidden field--item"]/text()')
sotrudniki_name2 = tree.xpath(
    '//div[@class="field field--name-second-name field--type-string field--label-hidden field--item"]/text()')
sotrudniki_about = tree.xpath(
    '//div[@class="field field--name-main-position field--type-entity-reference field--label-hidden field--item"]/text()')
sotrudniki_about_links = tree.xpath('//div[@class="node--wrap"]/@src')
# поискать


###### видео ######

tree = kod("https://physics.itmo.ru/ru/media/video")
videos_video = tree.xpath('//iframe[@width="854"]/@src')
videos_about = tree.xpath(
    '//div[@class="field field--name-name field--type-string field--label-hidden field--item"]/text()')
videos_photo = tree.xpath(
    '//div[@class="video-embed-field-provider-youtube video-embed-field-responsive-video form-group"]/iframe/@src')
videos_picture = []
a = "https://i.ytimg.com/vi_webp/"
c = "/default.webp"
for i in range(len(videos_video)):
    videos_video[i] = str(videos_video[i])
    j = 30
    b = ""
    while videos_video[i][j] != "?":
        b = b + videos_video[i][j]
        j += 1
    videos_picture.append(a + b + c)
# print(videos_photo)
###### вакансии ######

# создаётся словарь с названием вакансией и описанием

tree = kod("https://physics.itmo.ru/ru/vacancies")
vacancies_name = tree.xpath('//a[@hreflang="ru"]/text()')
vacancies_topic = tree.xpath('//h3/text()')

####### софт ########
# создать словарь

tree = kod("https://physics.itmo.ru/ru/soft")
soft_name = tree.xpath('//span[@class="field-content"]/text()')
soft_author = tree.xpath('//a[@hreflang="ru"]/text()')
soft_links = tree.xpath('//div[@class="field-content"]/@src')  # не работает

####### сми ########


tree = kod("https://physics.itmo.ru/ru/media/press")
smi_name = tree.xpath(
    '//div[@class="field field--name-type field--type-list-integer field--label-hidden field--item"]/text()')
smi_who = tree.xpath(
    '//div[@class="field field--name-source field--type-entity-reference field--label-hidden field--item"]/text()')
smi_about = tree.xpath(
    '//div[@class="field field--name-name field--type-string field--label-hidden field--item"]/text()')
smi_date = tree.xpath('//time//text()')

###### научные группы #######

tree = kod("https://physics.itmo.ru/ru/research-groups")

group_name = tree.xpath(
    '//div[@class="research-group-group-name"]/text()')  # переделать в str и убрать пробелы и добаввить группа
group_photo = tree.xpath('//img[@class="img-responsive"]/@src')

# надо разделить персоны на группы
group_spisok_name = tree.xpath(
    '//div[@class="field field--name-name field--type-string field--label-hidden field--item"]/text()')
group_spisok_surname = tree.xpath(
    '//div[@class="field field--name-second-name field--type-string field--label-hidden field--item"]/text()')
group_spisok_rank = tree.xpath(
    '//div[@class="field field--name-main-position field--type-entity-reference field--label-hidden field--item"]/text()')
# надо сделать описание научной группы






tree = kod("https://physics.itmo.ru/ru/news")
hrefs_news = tree.xpath('//div[@class="col-md-6 views-row"]/a/@href')
# print(len(hrefs_news))
c = []
# photo_news = tree.xpath('//img[@class="img-responsive"]/@src')
d=0
e=0
# print("https://physics.itmo.ru/"+hrefs_news[0])

d = 0
c=[]

FIND='<p'
for i in range(1, 6):
    d=0
    c=[]
    nwli = 'https://physics.itmo.ru/' + hrefs_news[i - 1]
    tree = kod(str(nwli))
    nwps = tree.xpath('//div[@class="field field--name-body field--type-text-with-summary field--label-hidden field--item"]/p/text()')
    c.append(nwps)
    newssite = 'z_news_' + str(i) + '.html'
    with open("shabnews.html", 'r+', encoding='utf-8') as f1, open(newssite, 'w+', encoding='utf-8') as f2:
        x = f1.readlines()
        for line in x:
                if FIND in line:
                    f2.write('<p>' + str(c[0][d]) + '</p>'+'\n')
                    #print(str(c[0][d]))
                    d += 1
                    print(d)
                    continue
                else:
                    f2.write(line)
                    continue


